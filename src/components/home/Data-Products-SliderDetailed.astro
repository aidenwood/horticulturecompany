---
/* Import the Services JS Data file */
import { products } from '../../content/products-detailed.js';

// Helper function to format price
const formatPrice = (price) => {
  if (typeof price === 'string' && price.startsWith('From')) {
    return price;
  }
  return `$${price}`;
};
---


<!-- CSS -->
<link rel="stylesheet" href="https://unpkg.com/flickity@2/dist/flickity.min.css">

<!-- JavaScript -->
<script src="https://unpkg.com/flickity@2/dist/flickity.pkgd.min.js"></script>



<style>
  .main-carousel { width: 100%; }
  .main-carousel.is-expanded { width: 100%; }
  
  .carousel-cell {
  width: calc(25% - 15px);
  margin-right: 15px;
  min-height: fit-content;
  display: flex;
  flex-direction: column;
  justify-items: center;
  text-align: left;
}
.flickity-viewport {
  transition: height 1.5s;
}

  #contain { max-width: 1980px !important; }
  
  /* Image cover settings for consistent sizing */
  .image-cover {
    width: 100%;
    height: 220px; /* Increased height for larger images */
    position: relative;
    overflow: hidden;
    margin-bottom: 1rem;
  }
  
  .image-cover img {
    width: 100%;
    height: 100%;
    object-fit: cover; /* This makes the image cover the entire container */
    object-position: center; /* Centers the image within the container */
  }
  
  /* Badge styles */
  .badge {
    display: inline-block;
    padding: 0.25rem 0.5rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
    margin-right: 0.25rem;
    margin-bottom: 0.25rem;
  }
  
  .badge-primary {
    background-color: rgba(var(--color-primary-500), 0.1);
    color: rgb(var(--color-primary-700));
  }
  
  /* Price tag styles */
  .price-tag {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    background-color: rgba(0, 0, 0, 0.6);
    color: white;
    padding: 0.25rem 0.75rem;
    border-radius: 0.5rem;
    font-weight: 600;
    z-index: 10;
  }
  
  /* Specification list styles */
  .spec-list {
    font-size: 0.8rem;
    color: rgba(255, 255, 255, 0.8);
    margin-top: 0.5rem;
  }
  
  .spec-list li {
    margin-bottom: 0.25rem;
    display: flex;
    align-items: center;
  }
  
  .spec-list li:before {
    content: "â€¢";
    margin-right: 0.5rem;
    color: rgb(var(--color-primary-500));
  }
  
  /* Card styles */
  .product-card {
    transition: all 0.3s ease;
    display: flex;
    flex-direction: column;
  }
  
  .product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
  }
  
  .card-content {
    flex: 1;
    display: flex;
    flex-direction: column;
  }
  
  .card-footer {
    margin-top: auto;
    padding-top: 1rem;
  }
</style>

<section class="">
  <div id="" class="mx-auto w-full">
    <div id="border" class="">
      <div class="fullscreen-carousel gap-6 px-4 sm:px-6 lg:px-8 py-24 bg-secondary-950" data-flickity='{ "adaptiveHeight": true, "cellAlign": "left", "contain": true, "pageDots": false, "autoPlay": 5400, "groupCells": "85%", "lazyLoad": true, "imagesLoaded": true, "adaptiveHeight": true, "wrapAround": true }'>
        {
          products.map((service) => (
            <div class="carousel-cell product-card h-32 rounded-2xl bg-secondary-900 text-white hover:bg-secondary-800 duration-200 border border-secondary-200 overflow-hidden">
              <div class="relative">
                <div class="image-cover">
                  <img src={service.img} alt={service.alt} />
                  {service.pricing && service.pricing[0] && (
                    <div class="price-tag">From {formatPrice(service.pricing[0].price)}</div>
                  )}
                </div>
              </div>
              
              <div class="card-content p-6">
                <h2 class="text-xl font-medium mb-2">{service.name}</h2>
                <p class="text-sm text-gray-300 mb-4">{service.description}</p>

                {service.pricing && (
                  <div class="mb-4">
                    <h3 class="text-sm font-semibold mb-2 text-gray-200">Available Packages</h3>
                    <div class="grid grid-cols-3 gap-2 text-sm">
                      {service.pricing.slice(0, 3).map((pkg) => (
                        <div class="bg-secondary-600 rounded-md p-2 mb-1">
                          <p class="text-xs">{pkg.name}</p>
                          <p class="text-2xl font-thin">{formatPrice(pkg.price)}</p>
                          </div>
                      ))}
                      {service.pricing.length > 2 && (
                        <div class="text-xs text-gray-400">+{service.pricing.length - 2} more options</div>
                      )}
                    </div>
                  </div>
                )}

              
                
                {service.popularApplications && (
                  <div class="mb-4">
                    <h3 class="text-sm font-semibold mb-2 text-gray-200">Popular For</h3>
                    <div class="flex flex-wrap">
                      {service.popularApplications.slice(0, 3).map((app) => (
                        <span class="badge badge-primary bg-secondary-200 text-secondary-950 rounded-md">{app}</span>
                      ))}
                    </div>
                  </div>
                )}
                
                
                
                <div class="card-footer">
                  <a href={service.link} class="text-white bg-primary-600  dark:hover:border-primary-200 dark:border-2 inline-flex tracking-tighter md:tracking-normal items-center justify-center rounded-full px-4 xs:px-5 py-3 text-sm xl:text-base font-semibold">
                    View Details
                  </a>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>