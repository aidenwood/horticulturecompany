---
import { services } from '../../content/hardscapes-detailed.js';

interface PricingOption {
  name: string;
  description: string;
  price: number | string;
  rentalPeriod?: string;
}

interface AdditionalOption {
  name: string;
  description: string;
  price: number | string;
}

const { 
  pricingOptions = [],  // Provide default empty array
  additionalOptions = [], 
  specifications = {},
  popularMiddleOption = true,
  ctaText = "Select Package"
} = Astro.props;
---

<div id="contain" class="w-full mx-auto ...">
  <h2 class="text-2xl font-bold text-center mb-6">Pricing Packages</h2>
  
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
    {pricingOptions.map((pkg, index) => {
      const isPopular = popularMiddleOption && index === 1;

      // Find matching service by package name
      const product = services.find(service => service.packages?.some(p => p.name === pkg.name));
      const productImg = product?.serviceimg || 'public/product-image-basic.webp';

      return (
        <div key={pkg.name} class={`bg-secondary-100 ... ${isPopular ? 'popular-class' : ''}`}>
          {isPopular && (
            <div class="popular-badge">Most Popular</div>
          )}
          <div class="p-6">
            <h3>{pkg.name}</h3>
            <p>{pkg.description}</p>
            <div>
              <span>${pkg.price}</span>
              {pkg.rentalPeriod && <span>/ {pkg.rentalPeriod}</span>}
            </div>
            <ul>
              {/* Example spec list */}
              {specifications.installation && <li>{specifications.installation}</li>}
              {/* Add other specs similarly */}
            </ul>
            <button
              class="snipcart-add-item"
              data-item-id={pkg.name}
              data-item-price={pkg.price}
              data-item-description={pkg.description}
              data-item-image={productImg}
              data-item-name={pkg.name}
            >
              {ctaText}
            </button>
          </div>
        </div>
      );
    })}
  </div>

  {/* Additional Options */}
  {additionalOptions.length > 0 && (
    <div>
      <h3>Additional Options</h3>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
        {additionalOptions.map(option => (
          <div key={option.name} class="option-card">
            <h4>{option.name}</h4>
            <p>{option.description}</p>
            <span>${option.price}</span>
            <button
              class="snipcart-add-item"
              data-item-id={option.name}
              data-item-price={option.price}
              data-item-description={option.description}
              data-item-image="public/product-image-basic.webp"
              data-item-name={option.name}
            >
              Add to cart
            </button>
          </div>
        ))}
      </div>
    </div>
  )}
</div>
